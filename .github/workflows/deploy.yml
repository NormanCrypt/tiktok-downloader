name: Build and deploy Python app

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save compose to env
        run: echo "COMPOSE_FILE=$(cat docker-compose.yml)" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production

    permissions:
      contents: none

    steps:
      - name: Deploy by SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.5
        env:
          CONTAINER_NAME: ${{ github.event.repository.name }}
          CONTAINER_PATH: /opt/docker_containers/${{ github.event.repository.name }}
          IMAGE_NAME: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          CR_PAT: ${{ secrets.CR_PAT }}
          CR_USER: ${{ secrets.CR_USER }}
          COMPOSE_FILE: ${{ env.COMPOSE_FILE }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script_stop: true
          envs: CONTAINER_NAME,CONTAINER_PATH,IMAGE_NAME,FULL_IMAGE_NAME,CR_PAT,CR_USER
          script: |
            mkdir -p $CONTAINER_PATH
            cd $CONTAINER_PATH
            mkdir -p data config
            echo $CR_PAT | docker login ghcr.io -u $CR_USER --password-stdin
            docker stop $CONTAINER_NAME || echo "Nothing to stop"
            docker rm $CONTAINER_NAME || echo "Nothing to remove from containers"
            docker rmi $(docker images --filter=reference="$IMAGE_NAME:*" -q) || \
              echo "Nothing to remove from images"
            rm -rf docker-compose.yml || echo "Nothing to remove"
            echo $COMPOSE_FILE > docker-compose.yml
            docker-compose up -d
            docker ps -a
